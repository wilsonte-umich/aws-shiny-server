#!/bin/bash

# help information
function show_usage {
    echo
    echo "usage:  ./server <COMMAND> ..."
    echo
    echo "server execution commands (in order of usage):"
    echo "    setup     run this command once to install Docker and perform other system tasks"   
    echo "    config    use nano to edit the server configuration file" 
    echo "    clone     use git to clone a single Shiny app code repository"   
    echo "    build     run docker compose build to create all needed Docker images"
    echo "    install   update the server config, clone GitHub repos, install R packages"
    echo "    up        launch all containers to run the app server"
    echo "    ls        list all stored Docker images and running containers"
    echo "    down      stop and remove any running containers to shut down the app server"
    echo
    echo "additional resource management commands:"
    echo "    bash      bring up an interactive bash terminal in a new app-server container"
    echo "    sanitize  prepare an EC2 instance for saving as a public AWS AMI without keys, etc."
    echo
    exit 1
}

# get ready
export BASE_DIR=/srv
export APPS_DIR=$BASE_DIR/apps
export DATA_DIR=$BASE_DIR/data
export SERVER_DIR=$BASE_DIR/aws-shiny-server
export PRIVATE_DIR=$BASE_DIR/private
export PACKAGE_DIR=$BASE_DIR/library
if [[ "$1" != "" && "$1" != "setup" ]]; then
    CONFIG_FILE=$PRIVATE_DIR/server-config.sh
    if [ ! -f $CONFIG_FILE ]; then
        echo
        echo "please run 'server setup' before 'server $1'"
        show_usage
    fi
    source $CONFIG_FILE
fi
cd $SERVER_DIR

# check for valid command
if [ "$1" = "" ]; then show_usage; fi
SCRIPT="$SERVER_DIR/lib/$1.sh"
if [ ! -f $SCRIPT ]; then 
    echo
    echo "unknown command: $1"
    show_usage
fi

# pass control to the target command script
shift
source $SCRIPT
